# EDIT COMMENTS!!!

# This file is a template for the environment variables required by the project.
# Copy this file to a new file named `.env.local` to set up your local development environment.
# > cp .env.example .env.local
#
# Then, fill in the values in `.env.local`.
# IMPORTANT: The `.env.local` file contains secrets and should NEVER be committed to Git.

# When adding new environment variables, remember to update this template.
# The schema in "/src/env.js" (if you're using T3's Env validation) should also be updated.


# --- Prisma / Database ---
# The connection string for your PostgreSQL database.
DATABASE_URL="postgresql://USER:PASSWORD@HOST:PORT/DATABASE"


# --- NextAuth.js / Auth.js ---
# The base URL of your application. Required by NextAuth for callback URLs and redirects.
NEXT_PUBLIC_APP_URL="http://localhost:3000"

# A secret used to sign cookies, JWTs, and other security-sensitive data.
# You can generate a new secret on the command line with: openssl rand -base64 32
# If using Auth.js v5, use AUTH_SECRET. For NextAuth.js v4, use NEXTAUTH_SECRET. You likely only need one.
AUTH_SECRET=
NEXTAUTH_SECRET=


# --- Email Provider (Resend) ---
# Check your [...nextauth].ts file to see which format your Email provider uses.

# OPTION 1: Using a full server connection string.
# The string includes your API key as the password. If you use this, you might not need the individual SMTP_PASS.
# Format: "smtp://resend:YOUR_API_KEY@smtp.resend.com:587"
EMAIL_SERVER=

# OPTION 2: Using individual variables.
# The "From" address for your emails.
EMAIL_FROM="onboarding@resend.dev"
# Your Resend API key. Get this from https://resend.com/api-keys
SMTP_PASS=
SMTP_HOST="smtp.resend.com"
SMTP_PORT="587"
SMTP_USER="resend"


# --- OAuth Providers (Example: Discord) ---
# Get these credentials from your provider's developer dashboard (e.g., Discord Developer Portal).
AUTH_DISCORD_ID=
AUTH_DISCORD_SECRET=



# EDIT!!!
JWT_SECRET=